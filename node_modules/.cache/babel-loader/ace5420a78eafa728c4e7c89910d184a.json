{"ast":null,"code":"var _jsxFileName = \"/home/denilso/desenv/cursos/devsuperior/movie-flix-frontend/src/pages/Private/MovieDetails/index.tsx\",\n    _s = $RefreshSig$();\n\nimport ReviewForm from \"components/ReviewForm\";\nimport ReviewListing from \"components/ReviewListing\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { hasAnyRoles } from \"util/auth\";\nimport { requestBackend } from \"util/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetails = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    const config = {\n      method: 'GET',\n      url: `movies/${movieId}/reviews`,\n      withCredentials: true\n    };\n    requestBackend(config).then(response => {\n      setReviews(response.data);\n    });\n  }, [movieId]);\n\n  const handleInsertReview = review => {\n    const clone = [...reviews];\n    clone.push(review);\n    setReviews(clone);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Tela do filme id: \", movieId, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), hasAnyRoles(['ROLE_MEMBER']) && /*#__PURE__*/_jsxDEV(ReviewForm, {\n        movieId: movieId,\n        onInsertReview: handleInsertReview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ReviewListing, {\n        reviews: reviews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MovieDetails, \"T4M7o53be3EZjj0/7WcHiFQ0+zw=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/home/denilso/desenv/cursos/devsuperior/movie-flix-frontend/src/pages/Private/MovieDetails/index.tsx"],"names":["ReviewForm","ReviewListing","useEffect","useState","useParams","hasAnyRoles","requestBackend","MovieDetails","movieId","reviews","setReviews","config","method","url","withCredentials","then","response","data","handleInsertReview","review","clone","push"],"mappings":";;;AACA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAOA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEzB,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,SAAS,EAA7B;AAEA,QAAM,CAAEK,OAAF,EAAWC,UAAX,IAAyBP,QAAQ,CAAW,EAAX,CAAvC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMS,MAA0B,GAAG;AACjCC,MAAAA,MAAM,EAAE,KADyB;AAEjCC,MAAAA,GAAG,EAAG,UAASL,OAAQ,UAFU;AAGjCM,MAAAA,eAAe,EAAE;AAHgB,KAAnC;AAKAR,IAAAA,cAAc,CAACK,MAAD,CAAd,CAAuBI,IAAvB,CAA8BC,QAAD,IAAc;AACzCN,MAAAA,UAAU,CAACM,QAAQ,CAACC,IAAV,CAAV;AACD,KAFD;AAGD,GATQ,EASN,CAACT,OAAD,CATM,CAAT;;AAWA,QAAMU,kBAAkB,GAAIC,MAAD,IAAoB;AAC5C,UAAMC,KAAK,GAAG,CAAC,GAAGX,OAAJ,CAAd;AACAW,IAAAA,KAAK,CAACC,IAAN,CAAWF,MAAX;AACAT,IAAAA,UAAU,CAACU,KAAD,CAAV;AACF,GAJD;;AAMC,sBACG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAA,8BACE;AAAA,yCAAuBZ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGH,WAAW,CAAC,CAAC,aAAD,CAAD,CAAX,iBACC,QAAC,UAAD;AAAa,QAAA,OAAO,EAAEG,OAAtB;AAA+B,QAAA,cAAc,EAAIU;AAAjD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAET;AAAxB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADH;AAeA,CAtCH;;GAAMF,Y;UAEgBH,S;;;KAFhBG,Y;AAwCJ,eAAeA,YAAf","sourcesContent":["import { AxiosRequestConfig } from \"axios\";\nimport ReviewForm from \"components/ReviewForm\";\nimport ReviewListing from \"components/ReviewListing\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Review } from \"types/review\";\nimport { hasAnyRoles } from \"util/auth\";\nimport { requestBackend } from \"util/requests\";\n\ntype urlParams = {\n  movieId: string;\n}\n\n\nconst MovieDetails = () => {\n\n  const { movieId } = useParams<urlParams>();\n\n  const [ reviews, setReviews] = useState<Review[]>([]);\n\n  useEffect( () => {\n    const config: AxiosRequestConfig = {\n      method: 'GET',\n      url: `movies/${movieId}/reviews`,\n      withCredentials: true,\n    };\n    requestBackend(config).then( (response) => {\n      setReviews(response.data);\n    });\n  }, [movieId])\n\n  const handleInsertReview = (review: Review) => {\n     const clone = [...reviews];\n     clone.push(review);\n     setReviews(clone);\n  }\n\n   return (\n      <div className=\"container\">\n        <div>\n          <h1>Tela do filme id: {movieId}  </h1>\n\n         { hasAnyRoles(['ROLE_MEMBER']) && (\n            <ReviewForm  movieId={movieId} onInsertReview= { handleInsertReview } />\n\n         )}\n          \n          <ReviewListing reviews={reviews}  />\n\n        </div>\n      </div>\n    );\n  };\n  \n  export default MovieDetails;"]},"metadata":{},"sourceType":"module"}