{"ast":null,"code":"var _process$env$REACT_AP, _process$env$REACT_AP2, _process$env$REACT_AP3;\n\nimport axios from 'axios';\nimport qs from 'qs';\nexport const BASE_URL = (_process$env$REACT_AP = process.env.REACT_APP_BACKEND_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : 'http://localhost:8080';\nconst tokenKey = \"authData\";\nconst CLIENT_ID = (_process$env$REACT_AP2 = process.env.REACT_APP_CLIENT_ID) !== null && _process$env$REACT_AP2 !== void 0 ? _process$env$REACT_AP2 : 'dscatalog';\nconst CLIENT_SECRET = (_process$env$REACT_AP3 = process.env.REACT_APP_CLIENT_SECRET) !== null && _process$env$REACT_AP3 !== void 0 ? _process$env$REACT_AP3 : 'dscatalog123';\nexport const requestBackendLogin = loginData => {\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    Authorization: 'Basic ' + window.btoa(CLIENT_ID + ':' + CLIENT_SECRET)\n  };\n  const data = qs.stringify({ ...loginData,\n    grant_type: 'password'\n  });\n  return axios({\n    method: 'POST',\n    baseURL: BASE_URL,\n    url: '/oauth/token',\n    data,\n    headers\n  });\n};\nexport const requestBackend = config => {\n  const headers = config.withCredentials ? { ...config.headers,\n    Authorization: \"Bearer \" + getAuthData().access_token\n  } : config.headers;\n  return axios({ ...config,\n    baseURL: BASE_URL,\n    headers\n  });\n};\nexport const saveAuthData = obj => {\n  localStorage.setItem(tokenKey, JSON.stringify(obj));\n};\nexport const getAuthData = () => {\n  var _localStorage$getItem;\n\n  const str = (_localStorage$getItem = localStorage.getItem(tokenKey)) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : '{}';\n  return JSON.parse(str);\n};","map":{"version":3,"sources":["/home/denilso/desenv/cursos/ws-bootcamp/dscatalog/frontend/src/util/requests.ts"],"names":["axios","qs","BASE_URL","process","env","REACT_APP_BACKEND_URL","tokenKey","CLIENT_ID","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","requestBackendLogin","loginData","headers","Authorization","window","btoa","data","stringify","grant_type","method","baseURL","url","requestBackend","config","withCredentials","getAuthData","access_token","saveAuthData","obj","localStorage","setItem","JSON","str","getItem","parse"],"mappings":";;AACA,OAAOA,KAAP,MAA0C,OAA1C;AACA,OAAOC,EAAP,MAAe,IAAf;AAYA,OAAO,MAAMC,QAAQ,4BAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAf,yEAAwC,uBAAtD;AAEP,MAAMC,QAAQ,GAAG,UAAjB;AAEA,MAAMC,SAAS,6BAAGJ,OAAO,CAACC,GAAR,CAAYI,mBAAf,2EAAsC,WAArD;AACA,MAAMC,aAAa,6BAAGN,OAAO,CAACC,GAAR,CAAYM,uBAAf,2EAA0C,cAA7D;AAOA,OAAO,MAAMC,mBAAmB,GAAIC,SAAD,IAA2B;AAE1D,QAAMC,OAAO,GAAG;AACZ,oBAAiB,mCADL;AAEZC,IAAAA,aAAa,EAAE,WAAWC,MAAM,CAACC,IAAP,CAAYT,SAAS,GAAG,GAAZ,GAAkBE,aAA9B;AAFd,GAAhB;AAKA,QAAMQ,IAAI,GAAGhB,EAAE,CAACiB,SAAH,CAAa,EACtB,GAAGN,SADmB;AAEtBO,IAAAA,UAAU,EAAE;AAFU,GAAb,CAAb;AAKA,SAAOnB,KAAK,CAAC;AAACoB,IAAAA,MAAM,EAAE,MAAT;AAAiBC,IAAAA,OAAO,EAAEnB,QAA1B;AAAoCoB,IAAAA,GAAG,EAAE,cAAzC;AAAyDL,IAAAA,IAAzD;AAA+DJ,IAAAA;AAA/D,GAAD,CAAZ;AACD,CAbI;AAeP,OAAO,MAAMU,cAAc,GAAKC,MAAF,IAAmC;AAE7D,QAAMX,OAAO,GAAGW,MAAM,CAACC,eAAP,GACd,EACE,GAAGD,MAAM,CAACX,OADZ;AAEEC,IAAAA,aAAa,EAAE,YAAYY,WAAW,GAAGC;AAF3C,GADc,GAIZH,MAAM,CAACX,OAJX;AAKA,SAAOb,KAAK,CAAC,EAAC,GAAGwB,MAAJ;AAAYH,IAAAA,OAAO,EAAEnB,QAArB;AAA+BW,IAAAA;AAA/B,GAAD,CAAZ;AACH,CARM;AAYP,OAAO,MAAMe,YAAY,GAAIC,GAAD,IAAwB;AAChDC,EAAAA,YAAY,CAACC,OAAb,CAAqBzB,QAArB,EAA+B0B,IAAI,CAACd,SAAL,CAAeW,GAAf,CAA/B;AACH,CAFM;AAIP,OAAO,MAAMH,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAMO,GAAG,4BAAGH,YAAY,CAACI,OAAb,CAAqB5B,QAArB,CAAH,yEAAqC,IAA9C;AACA,SAAO0B,IAAI,CAACG,KAAL,CAAWF,GAAX,CAAP;AACH,CAHM","sourcesContent":["\nimport axios, { AxiosRequestConfig } from 'axios';\nimport qs from 'qs'\n\n\ntype LoginResponse = {\n    access_token: string;\n    token_type: string;\n    expires_in: number;\n    scope: string;\n    userFirstName: string;\n    userId: number;\n}\n\nexport const BASE_URL = process.env.REACT_APP_BACKEND_URL ?? 'http://localhost:8080';\n\nconst tokenKey = \"authData\";\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID ?? 'dscatalog';\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET ?? 'dscatalog123';\n\ntype LoginData = {\n    username: string;\n    password: string;\n}\n\nexport const requestBackendLogin = (loginData : LoginData) => { \n\n    const headers = {\n        'Content-Type' : 'application/x-www-form-urlencoded',\n        Authorization: 'Basic ' + window.btoa(CLIENT_ID + ':' + CLIENT_SECRET),\n    }\n\n    const data = qs.stringify({\n        ...loginData,\n        grant_type: 'password'\n    });\n\n    return axios({method: 'POST', baseURL: BASE_URL, url: '/oauth/token', data, headers})\n  }\n\nexport const requestBackend = ( config: AxiosRequestConfig)   => {\n\n    const headers = config.withCredentials \n    ? {\n        ...config.headers, \n        Authorization: \"Bearer \" + getAuthData().access_token\n    } : config.headers;\n    return axios({...config, baseURL: BASE_URL, headers } );\n}\n\n\n\nexport const saveAuthData = (obj: LoginResponse) => {\n    localStorage.setItem(tokenKey, JSON.stringify(obj));\n}\n\nexport const getAuthData = () => {\n    const str = localStorage.getItem(tokenKey) ?? '{}';\n    return JSON.parse(str) as LoginResponse;\n}"]},"metadata":{},"sourceType":"module"}