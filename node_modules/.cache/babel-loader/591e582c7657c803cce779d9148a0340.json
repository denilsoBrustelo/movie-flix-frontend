{"ast":null,"code":"var _jsxFileName = \"/home/denilso/desenv/cursos/devsuperior/movie-flix-frontend/src/components/ReviewForm/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { requestBackend } from \"util/requests\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReviewForm = _ref => {\n  _s();\n\n  var _errors$text;\n\n  let {\n    movieId,\n    onInsertReview\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    setValue\n  } = useForm();\n\n  const onSubmit = formData => {\n    formData.movieId = parseInt(movieId);\n    console.log(formData);\n    const config = {\n      method: 'POST',\n      url: `/reviews`,\n      data: formData,\n      withCredentials: true\n    };\n    requestBackend(config).then(response => {\n      setValue('text', '');\n      onInsertReview(response.data);\n      console.log(\"Sucesso ao salvar\", response);\n    }).catch(error => {\n      console.log(\"Erro ao salvar\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('text', {\n            required: 'Campo obrigatório'\n          }),\n          type: \"text\",\n          name: \"text\",\n          placeholder: \"Deixe sua avalia\\xE7\\xE3o aqui\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_errors$text = errors.text) === null || _errors$text === void 0 ? void 0 : _errors$text.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"SALVAR AVALIA\\xC7\\xC3O\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReviewForm, \"wcycHKGAQ1WfgG2DrwwMKu9KuyA=\", false, function () {\n  return [useForm];\n});\n\n_c = ReviewForm;\nexport default ReviewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"sources":["/home/denilso/desenv/cursos/devsuperior/movie-flix-frontend/src/components/ReviewForm/index.tsx"],"names":["useForm","requestBackend","ReviewForm","movieId","onInsertReview","register","handleSubmit","formState","errors","setValue","onSubmit","formData","parseInt","console","log","config","method","url","data","withCredentials","then","response","catch","error","required","text","message"],"mappings":";;;AACA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAO,cAAP;;;AAYA,MAAMC,UAAU,GAAG,QAA4C;AAAA;;AAAA;;AAAA,MAA1C;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAA0C;AAE7D,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAACC,MAAAA;AAAD,KAArC;AAAgDC,IAAAA;AAAhD,MAA6DT,OAAO,EAA1E;;AAEA,QAAMU,QAAQ,GAAKC,QAAF,IAAyB;AAExCA,IAAAA,QAAQ,CAACR,OAAT,GAAmBS,QAAQ,CAACT,OAAD,CAA3B;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,UAAMI,MAA0B,GAAG;AACjCC,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,GAAG,EAAG,UAF2B;AAGjCC,MAAAA,IAAI,EAAEP,QAH2B;AAIjCQ,MAAAA,eAAe,EAAE;AAJgB,KAAnC;AAOAlB,IAAAA,cAAc,CAACc,MAAD,CAAd,CACCK,IADD,CACQC,QAAD,IAAc;AAClBZ,MAAAA,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAR;AACAL,MAAAA,cAAc,CAACiB,QAAQ,CAACH,IAAV,CAAd;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCO,QAAjC;AACF,KALD,EAMCC,KAND,CAMOC,KAAK,IAAI;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BS,KAA9B;AACD,KARD;AAUD,GAtBD;;AAyBA,sBACE;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEjB,YAAY,CAACI,QAAD,CAA5B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE,sBACML,QAAQ,CAAC,MAAD,EAAS;AACpBmB,YAAAA,QAAQ,EAAE;AADU,WAAT,CADd;AAIC,UAAA,IAAI,EAAC,MAJN;AAKC,UAAA,IAAI,EAAC,MALN;AAMC,UAAA,WAAW,EAAC;AANb;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA,oCACGhB,MAAM,CAACiB,IADV,iDACG,aAAaC;AADhB;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CApDD;;GAAMxB,U;UAE+DF,O;;;KAF/DE,U;AAsDN,eAAeA,UAAf","sourcesContent":["import { AxiosRequestConfig } from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { Review } from \"types/review\";\nimport { requestBackend } from \"util/requests\";\n\nimport './styles.css';\n\ntype Props = {\n  movieId: string;\n  onInsertReview: ( review: Review) => void;\n}\n\ntype FormData = {\n  movieId: number;\n  text: string;\n}\n\nconst ReviewForm = ( { movieId, onInsertReview} : Props   ) => {\n\n  const { register, handleSubmit, formState: {errors }, setValue } = useForm<FormData>();\n\n  const onSubmit = ( formData: FormData) => {\n\n    formData.movieId = parseInt(movieId);\n    console.log(formData);\n\n    const config: AxiosRequestConfig = {\n      method: 'POST',\n      url: `/reviews`,\n      data: formData,\n      withCredentials: true,\n    };\n\n    requestBackend(config)\n    .then( (response) => {\n       setValue('text', '');\n       onInsertReview(response.data);\n       console.log(\"Sucesso ao salvar\", response);\n    })\n    .catch(error => {\n      console.log(\"Erro ao salvar\", error);\n    });\n\n  };\n\n\n  return (\n    <div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"review-container\">\n            <input \n             { ...register('text', {\n               required: 'Campo obrigatório',\n             })}\n             type=\"text\"\n             name=\"text\"\n             placeholder=\"Deixe sua avaliação aqui\"\n            />\n            <div>\n              {errors.text?.message}\n            </div>\n          </div>\n          <button type=\"submit\">\n             SALVAR AVALIAÇÃO\n          </button>\n        </form>\n    </div>\n    \n  );\n};\n\nexport default ReviewForm;"]},"metadata":{},"sourceType":"module"}