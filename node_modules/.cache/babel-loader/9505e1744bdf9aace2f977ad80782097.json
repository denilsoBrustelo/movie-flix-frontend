{"ast":null,"code":"var _jsxFileName = \"/home/denilso/desenv/cursos/devsuperior/movie-flix-frontend/src/components/PrivateRoute/index.tsx\";\nimport { Redirect, Route } from 'react-router-dom';\nimport { hasAnyRoles, isAuthenticated } from 'util/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    children,\n    path,\n    roles = []\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    render: _ref2 => {\n      let {\n        location\n      } = _ref2;\n      return !isAuthenticated() ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/admin/auth/login\",\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 31\n      }, this) : !hasAnyRoles(roles) ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/admin/products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this) : children;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/denilso/desenv/cursos/devsuperior/movie-flix-frontend/src/components/PrivateRoute/index.tsx"],"names":["Redirect","Route","hasAnyRoles","isAuthenticated","PrivateRoute","children","path","roles","location","pathname","state","from"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAAmD,WAAnD;;;AAQA,MAAMC,YAAY,GAAG,QAA2C;AAAA,MAA1C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,KAAK,GAAG;AAA1B,GAA0C;AAE9D,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,MAAM,EAAE;AAAA,UAAE;AAAEE,QAAAA;AAAF,OAAF;AAAA,aAEN,CAACL,eAAe,EAAhB,gBAAsB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAClCM,UAAAA,QAAQ,EAAE,mBADwB;AAElCC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAF2B;AAAd;AAAA;AAAA;AAAA;AAAA,cAAtB,GAKE,CAACN,WAAW,CAACK,KAAD,CAAZ,gBACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,GAGEF,QAVE;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAvBD;;KAAMD,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import { Redirect, Route } from 'react-router-dom';\nimport { hasAnyRoles, isAuthenticated, Role } from 'util/auth';\n\ntype Props = {\n  children: React.ReactNode;\n  path: string;\n  roles?: Role[];\n};\n\nconst PrivateRoute = ({ children, path, roles = [] }: Props) => {\n\n  return (\n    <Route\n      path={path}\n      render={( { location }) =>\n\n        !isAuthenticated() ? (<Redirect to={{\n          pathname: \"/admin/auth/login\",\n          state: { from: location }\n        }} /> \n        ) : (\n          !hasAnyRoles(roles) ? (\n            <Redirect to=\"/admin/products\" />\n          ) : (\n            children\n            )\n        ) \n        \n      }\n    />\n  );\n  \n};\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}